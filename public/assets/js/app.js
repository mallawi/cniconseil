/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("(function() {\n    \"use strict\";\n\n    // constructor function for XMLHttpRequest that return a promise\n    function XHRequest() {\n        function ajaxReq(method, url) {\n            var promise = new Promise( function (resolve, reject) {\n                var xhr = new XMLHttpRequest();\n\n                xhr.open(method, url);\n                xhr.responseType = \"document\";\n                xhr.send();\n\n                xhr.onreadystatechange = function() {\n                    if (this.readyState === 4) {\n                        if (this.status === 200) {\n                            resolve(this.response);\n                        } else {\n                            reject(this.status);\n                        }\n                    } else {\n                        \n                    }\n                }\n            });\n\n            return promise;\n        }\n\n        return {\n            get: function(url) {\n                return ajaxReq(\"GET\", url);\n            },\n            post: function(url) {\n                return ajaxReq(\"POST\", url);\n            }\n        }\n\n    }\n\n\n    function formsHandler() {\n        var formsItem = document.getElementsByClassName(\"forms--item\");\n        var currentFormRef;\n        var oldFormRef;\n\n\n        function makeChanges(data) {\n            var requestedData = data;\n            var formHolder = document.getElementById(\"form--container\");\n            var form = requestedData.getElementById(\"form--wrap\");\n            var oldForm;\n\n            if (formHolder.classList.contains(\"form--shown\")) {\n                // checking if form is the same then remove\n                if (currentFormRef.classList.contains(\"forms--item-current\")) {\n                    oldForm = document.getElementById(\"form--wrap\");\n                    formHolder.removeChild(oldForm);\n                    formHolder.classList.remove(\"form--shown\");\n                    currentFormRef.classList.remove(\"forms--item-current\");\n                    console.log(\"removed\");\n                } else { // if not the same form replace it\n                    oldForm = document.getElementById(\"form--wrap\");\n                    formHolder.replaceChild(form, oldForm);\n                    oldFormRef.classList.remove(\"forms--item-current\");\n                    currentFormRef.classList.add(\"forms--item-current\");\n                    console.log(\"replaced\");\n                }\n            } else { // if no form shown add\n                formHolder.classList.add(\"form--shown\");\n                currentFormRef.classList.add(\"forms--item-current\");\n\n                formHolder.appendChild(form);\n                oldFormRef = currentFormRef;\n                \n                console.log(\"added\"); \n            }\n        }\n\n        var responseHandler = {\n            success: function(data) {\n                makeChanges(data);\n            },\n            failed: function(status) {\n                console.log(status);\n            }\n        }\n\n         function getForms(ev) {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            currentFormRef = this;\n\n            var typeAttr = this.getAttribute(\"data-type\");\n\n            var url = \"/form/\" + typeAttr;\n\n            var xhrequest = new XHRequest();\n\n            xhrequest.get(url).then(responseHandler.success).catch(responseHandler.failed);\n        }\n\n        for (var i = 0; i < formsItem.length; i++) {\n            formsItem[i].addEventListener(\"click\", getForms);\n        }\n    }\n\n    // function handler for handling slider from the index page\n    function sliderHandler() {\n        var sliderBtns = document.getElementsByClassName(\"slider--btn\");\n        var sliderItems = document.getElementsByClassName(\"slider--item\");\n        var prevBtn;\n        var nextBtn;\n        var itemIdx;\n        var currentItem;\n\n        // making changes to the slider\n        function changeSliderItem(current, item) {\n            current.classList.remove(\"slider--item-current\");\n            item.classList.add(\"slider--item-current\");\n            \n        }\n        \n        // object for handling btns and slider items logicaly\n        var sControl = {\n            previous: function(btn) {\n                if (nextBtn && nextBtn.disabled === true) {\n                    nextBtn.disabled = false;\n                }\n\n                for (var idx = 0; idx < sliderItems.length; idx++) {\n                    if (sliderItems[idx].classList.contains(\"slider--item-current\")) {\n                        if (idx + 1 === sliderItems.length ) {\n                            btn.disabled = true;\n                            return;\n                        }\n\n                        var item = idx + 1;\n                        changeSliderItem(sliderItems[idx], sliderItems[item]);\n                        break;\n                    }\n                }\n            },\n            next: function(btn) {\n                if (prevBtn && prevBtn.disabled === true) {\n                    prevBtn.disabled = false;\n                }\n\n                for (var idx = 0; idx < sliderItems.length; idx++) {\n                    if (sliderItems[idx].classList.contains(\"slider--item-current\")) {\n                        if (idx - 1 < 0 ) {\n                            btn.disabled = true;\n                            return;\n                        } \n\n                        var item = idx - 1;\n                        changeSliderItem(sliderItems[idx], sliderItems[item]);\n                        break;\n                    }\n                }\n            }\n        }\n\n        // event listener handler, determining the btn and calling the right action\n        function sBtnHandler(ev) {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            switch(this.name) {\n                case \"previous--btn\":\n                    sControl.previous(this);\n                    prevBtn = this;\n                    break;\n                case \"next--btn\":\n                    sControl.next(this);\n                    nextBtn = this;\n                    break;\n            }\n\n        }\n\n\n        // for loops to add event listeners to btns and iterating over slider items\n        \n        for (var i = 0; i < sliderBtns.length; i++) {\n            sliderBtns[i].addEventListener(\"click\", sBtnHandler);\n        }\n\n        for (var idx = 0; idx < sliderItems.length; idx++) {\n            if (idx === sliderItems.length - 1) {\n                sliderItems[idx].classList.add(\"slider--item-current\");\n            }\n        }\n    }\n\n\n\n    function init() {\n        console.log(\"document ready!\");\n    }\n\n\n    function navHandler() {\n        var hamBtn = document.getElementById(\"ham--button\");\n        var nav = document.getElementById(\"main--nav\");\n\n        hamBtn.addEventListener(\"click\", function(ev) {\n            ev.preventDefault();\n\n           if (!nav.classList.contains(\"nav--shown\")) {\n                nav.classList.add(\"nav--shown\");\n           } else {\n               nav.classList.remove(\"nav--shown\");\n           }\n        });\n    } \n    \n\n\n    document.onreadystatechange = function() {\n        if (document.readyState === \"complete\") {\n            init();\n            navHandler();\n            formsHandler();\n            sliderHandler();\n        }\n    }\n\n}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL2FwcC5qcz84YjY3Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIC8vIGNvbnN0cnVjdG9yIGZ1bmN0aW9uIGZvciBYTUxIdHRwUmVxdWVzdCB0aGF0IHJldHVybiBhIHByb21pc2VcbiAgICBmdW5jdGlvbiBYSFJlcXVlc3QoKSB7XG4gICAgICAgIGZ1bmN0aW9uIGFqYXhSZXEobWV0aG9kLCB1cmwpIHtcbiAgICAgICAgICAgIHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoIGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICAgICAgICAgICAgICB4aHIub3BlbihtZXRob2QsIHVybCk7XG4gICAgICAgICAgICAgICAgeGhyLnJlc3BvbnNlVHlwZSA9IFwiZG9jdW1lbnRcIjtcbiAgICAgICAgICAgICAgICB4aHIuc2VuZCgpO1xuXG4gICAgICAgICAgICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSA0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodGhpcy5yZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdCh0aGlzLnN0YXR1cyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gcHJvbWlzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKHVybCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhamF4UmVxKFwiR0VUXCIsIHVybCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcG9zdDogZnVuY3Rpb24odXJsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFqYXhSZXEoXCJQT1NUXCIsIHVybCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gZm9ybXNIYW5kbGVyKCkge1xuICAgICAgICB2YXIgZm9ybXNJdGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImZvcm1zLS1pdGVtXCIpO1xuICAgICAgICB2YXIgY3VycmVudEZvcm1SZWY7XG4gICAgICAgIHZhciBvbGRGb3JtUmVmO1xuXG5cbiAgICAgICAgZnVuY3Rpb24gbWFrZUNoYW5nZXMoZGF0YSkge1xuICAgICAgICAgICAgdmFyIHJlcXVlc3RlZERhdGEgPSBkYXRhO1xuICAgICAgICAgICAgdmFyIGZvcm1Ib2xkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvcm0tLWNvbnRhaW5lclwiKTtcbiAgICAgICAgICAgIHZhciBmb3JtID0gcmVxdWVzdGVkRGF0YS5nZXRFbGVtZW50QnlJZChcImZvcm0tLXdyYXBcIik7XG4gICAgICAgICAgICB2YXIgb2xkRm9ybTtcblxuICAgICAgICAgICAgaWYgKGZvcm1Ib2xkZXIuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZm9ybS0tc2hvd25cIikpIHtcbiAgICAgICAgICAgICAgICAvLyBjaGVja2luZyBpZiBmb3JtIGlzIHRoZSBzYW1lIHRoZW4gcmVtb3ZlXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRGb3JtUmVmLmNsYXNzTGlzdC5jb250YWlucyhcImZvcm1zLS1pdGVtLWN1cnJlbnRcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgb2xkRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZm9ybS0td3JhcFwiKTtcbiAgICAgICAgICAgICAgICAgICAgZm9ybUhvbGRlci5yZW1vdmVDaGlsZChvbGRGb3JtKTtcbiAgICAgICAgICAgICAgICAgICAgZm9ybUhvbGRlci5jbGFzc0xpc3QucmVtb3ZlKFwiZm9ybS0tc2hvd25cIik7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRGb3JtUmVmLmNsYXNzTGlzdC5yZW1vdmUoXCJmb3Jtcy0taXRlbS1jdXJyZW50XCIpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInJlbW92ZWRcIik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHsgLy8gaWYgbm90IHRoZSBzYW1lIGZvcm0gcmVwbGFjZSBpdFxuICAgICAgICAgICAgICAgICAgICBvbGRGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb3JtLS13cmFwXCIpO1xuICAgICAgICAgICAgICAgICAgICBmb3JtSG9sZGVyLnJlcGxhY2VDaGlsZChmb3JtLCBvbGRGb3JtKTtcbiAgICAgICAgICAgICAgICAgICAgb2xkRm9ybVJlZi5jbGFzc0xpc3QucmVtb3ZlKFwiZm9ybXMtLWl0ZW0tY3VycmVudFwiKTtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudEZvcm1SZWYuY2xhc3NMaXN0LmFkZChcImZvcm1zLS1pdGVtLWN1cnJlbnRcIik7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwicmVwbGFjZWRcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHsgLy8gaWYgbm8gZm9ybSBzaG93biBhZGRcbiAgICAgICAgICAgICAgICBmb3JtSG9sZGVyLmNsYXNzTGlzdC5hZGQoXCJmb3JtLS1zaG93blwiKTtcbiAgICAgICAgICAgICAgICBjdXJyZW50Rm9ybVJlZi5jbGFzc0xpc3QuYWRkKFwiZm9ybXMtLWl0ZW0tY3VycmVudFwiKTtcblxuICAgICAgICAgICAgICAgIGZvcm1Ib2xkZXIuYXBwZW5kQ2hpbGQoZm9ybSk7XG4gICAgICAgICAgICAgICAgb2xkRm9ybVJlZiA9IGN1cnJlbnRGb3JtUmVmO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiYWRkZWRcIik7IFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHJlc3BvbnNlSGFuZGxlciA9IHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBtYWtlQ2hhbmdlcyhkYXRhKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsZWQ6IGZ1bmN0aW9uKHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHN0YXR1cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAgZnVuY3Rpb24gZ2V0Rm9ybXMoZXYpIHtcbiAgICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBldi5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICAgICAgICAgY3VycmVudEZvcm1SZWYgPSB0aGlzO1xuXG4gICAgICAgICAgICB2YXIgdHlwZUF0dHIgPSB0aGlzLmdldEF0dHJpYnV0ZShcImRhdGEtdHlwZVwiKTtcblxuICAgICAgICAgICAgdmFyIHVybCA9IFwiL2Zvcm0vXCIgKyB0eXBlQXR0cjtcblxuICAgICAgICAgICAgdmFyIHhocmVxdWVzdCA9IG5ldyBYSFJlcXVlc3QoKTtcblxuICAgICAgICAgICAgeGhyZXF1ZXN0LmdldCh1cmwpLnRoZW4ocmVzcG9uc2VIYW5kbGVyLnN1Y2Nlc3MpLmNhdGNoKHJlc3BvbnNlSGFuZGxlci5mYWlsZWQpO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmb3Jtc0l0ZW0ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGZvcm1zSXRlbVtpXS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZ2V0Rm9ybXMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gZnVuY3Rpb24gaGFuZGxlciBmb3IgaGFuZGxpbmcgc2xpZGVyIGZyb20gdGhlIGluZGV4IHBhZ2VcbiAgICBmdW5jdGlvbiBzbGlkZXJIYW5kbGVyKCkge1xuICAgICAgICB2YXIgc2xpZGVyQnRucyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJzbGlkZXItLWJ0blwiKTtcbiAgICAgICAgdmFyIHNsaWRlckl0ZW1zID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInNsaWRlci0taXRlbVwiKTtcbiAgICAgICAgdmFyIHByZXZCdG47XG4gICAgICAgIHZhciBuZXh0QnRuO1xuICAgICAgICB2YXIgaXRlbUlkeDtcbiAgICAgICAgdmFyIGN1cnJlbnRJdGVtO1xuXG4gICAgICAgIC8vIG1ha2luZyBjaGFuZ2VzIHRvIHRoZSBzbGlkZXJcbiAgICAgICAgZnVuY3Rpb24gY2hhbmdlU2xpZGVySXRlbShjdXJyZW50LCBpdGVtKSB7XG4gICAgICAgICAgICBjdXJyZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJzbGlkZXItLWl0ZW0tY3VycmVudFwiKTtcbiAgICAgICAgICAgIGl0ZW0uY2xhc3NMaXN0LmFkZChcInNsaWRlci0taXRlbS1jdXJyZW50XCIpO1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIG9iamVjdCBmb3IgaGFuZGxpbmcgYnRucyBhbmQgc2xpZGVyIGl0ZW1zIGxvZ2ljYWx5XG4gICAgICAgIHZhciBzQ29udHJvbCA9IHtcbiAgICAgICAgICAgIHByZXZpb3VzOiBmdW5jdGlvbihidG4pIHtcbiAgICAgICAgICAgICAgICBpZiAobmV4dEJ0biAmJiBuZXh0QnRuLmRpc2FibGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgIG5leHRCdG4uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpZHggPSAwOyBpZHggPCBzbGlkZXJJdGVtcy5sZW5ndGg7IGlkeCsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzbGlkZXJJdGVtc1tpZHhdLmNsYXNzTGlzdC5jb250YWlucyhcInNsaWRlci0taXRlbS1jdXJyZW50XCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaWR4ICsgMSA9PT0gc2xpZGVySXRlbXMubGVuZ3RoICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IGlkeCArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2VTbGlkZXJJdGVtKHNsaWRlckl0ZW1zW2lkeF0sIHNsaWRlckl0ZW1zW2l0ZW1dKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG5leHQ6IGZ1bmN0aW9uKGJ0bikge1xuICAgICAgICAgICAgICAgIGlmIChwcmV2QnRuICYmIHByZXZCdG4uZGlzYWJsZWQgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgcHJldkJ0bi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZvciAodmFyIGlkeCA9IDA7IGlkeCA8IHNsaWRlckl0ZW1zLmxlbmd0aDsgaWR4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNsaWRlckl0ZW1zW2lkeF0uY2xhc3NMaXN0LmNvbnRhaW5zKFwic2xpZGVyLS1pdGVtLWN1cnJlbnRcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpZHggLSAxIDwgMCApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpdGVtID0gaWR4IC0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZVNsaWRlckl0ZW0oc2xpZGVySXRlbXNbaWR4XSwgc2xpZGVySXRlbXNbaXRlbV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBldmVudCBsaXN0ZW5lciBoYW5kbGVyLCBkZXRlcm1pbmluZyB0aGUgYnRuIGFuZCBjYWxsaW5nIHRoZSByaWdodCBhY3Rpb25cbiAgICAgICAgZnVuY3Rpb24gc0J0bkhhbmRsZXIoZXYpIHtcbiAgICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBldi5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICAgICAgICAgc3dpdGNoKHRoaXMubmFtZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJwcmV2aW91cy0tYnRuXCI6XG4gICAgICAgICAgICAgICAgICAgIHNDb250cm9sLnByZXZpb3VzKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICBwcmV2QnRuID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcIm5leHQtLWJ0blwiOlxuICAgICAgICAgICAgICAgICAgICBzQ29udHJvbC5uZXh0KHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICBuZXh0QnRuID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG5cbiAgICAgICAgLy8gZm9yIGxvb3BzIHRvIGFkZCBldmVudCBsaXN0ZW5lcnMgdG8gYnRucyBhbmQgaXRlcmF0aW5nIG92ZXIgc2xpZGVyIGl0ZW1zXG4gICAgICAgIFxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlckJ0bnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHNsaWRlckJ0bnNbaV0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHNCdG5IYW5kbGVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGlkeCA9IDA7IGlkeCA8IHNsaWRlckl0ZW1zLmxlbmd0aDsgaWR4KyspIHtcbiAgICAgICAgICAgIGlmIChpZHggPT09IHNsaWRlckl0ZW1zLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgICAgICBzbGlkZXJJdGVtc1tpZHhdLmNsYXNzTGlzdC5hZGQoXCJzbGlkZXItLWl0ZW0tY3VycmVudFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuXG5cbiAgICBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcImRvY3VtZW50IHJlYWR5IVwiKTtcbiAgICB9XG5cblxuICAgIGZ1bmN0aW9uIG5hdkhhbmRsZXIoKSB7XG4gICAgICAgIHZhciBoYW1CdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImhhbS0tYnV0dG9uXCIpO1xuICAgICAgICB2YXIgbmF2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluLS1uYXZcIik7XG5cbiAgICAgICAgaGFtQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbihldikge1xuICAgICAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICBpZiAoIW5hdi5jbGFzc0xpc3QuY29udGFpbnMoXCJuYXYtLXNob3duXCIpKSB7XG4gICAgICAgICAgICAgICAgbmF2LmNsYXNzTGlzdC5hZGQoXCJuYXYtLXNob3duXCIpO1xuICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgbmF2LmNsYXNzTGlzdC5yZW1vdmUoXCJuYXYtLXNob3duXCIpO1xuICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0gXG4gICAgXG5cblxuICAgIGRvY3VtZW50Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiKSB7XG4gICAgICAgICAgICBpbml0KCk7XG4gICAgICAgICAgICBuYXZIYW5kbGVyKCk7XG4gICAgICAgICAgICBmb3Jtc0hhbmRsZXIoKTtcbiAgICAgICAgICAgIHNsaWRlckhhbmRsZXIoKTtcbiAgICAgICAgfVxuICAgIH1cblxufSgpKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyByZXNvdXJjZXMvYXNzZXRzL2pzL2FwcC5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }
/******/ ]);